// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OneValet.DeviceGallery.Infrastructure.Contexts;

#nullable disable

namespace OneValet.DeviceGallery.Infrastructure.Migrations
{
    [DbContext(typeof(DeviceDbContext))]
    [Migration("20220312000821_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OneValet.DeviceGallery.Domain.Entities.Device", b =>
                {
                    b.Property<int>("DeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeviceId"), 1L, 1);

                    b.Property<int>("DeviceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Temperature")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeviceId");

                    b.HasIndex("DeviceTypeId");

                    b.ToTable("Devices", (string)null);
                });

            modelBuilder.Entity("OneValet.DeviceGallery.Domain.Entities.DeviceType", b =>
                {
                    b.Property<int>("DeviceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeviceTypeId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeviceTypeId");

                    b.ToTable("DeviceTypes", (string)null);
                });

            modelBuilder.Entity("OneValet.DeviceGallery.Domain.Entities.DeviceUser", b =>
                {
                    b.Property<long>("DeviceUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DeviceUserId"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeviceUserId");

                    b.ToTable("DeviceUsers", (string)null);
                });

            modelBuilder.Entity("OneValet.DeviceGallery.Domain.Entities.DeviceUserDevice", b =>
                {
                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<long>("DeviceUserId")
                        .HasColumnType("bigint");

                    b.HasKey("DeviceId", "DeviceUserId");

                    b.HasIndex("DeviceUserId");

                    b.ToTable("UserDevices", (string)null);
                });

            modelBuilder.Entity("OneValet.DeviceGallery.Domain.Entities.Device", b =>
                {
                    b.HasOne("OneValet.DeviceGallery.Domain.Entities.DeviceType", "DeviceType")
                        .WithMany("Devices")
                        .HasForeignKey("DeviceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviceType");
                });

            modelBuilder.Entity("OneValet.DeviceGallery.Domain.Entities.DeviceUserDevice", b =>
                {
                    b.HasOne("OneValet.DeviceGallery.Domain.Entities.Device", "Device")
                        .WithMany("DeviceUserDevices")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OneValet.DeviceGallery.Domain.Entities.DeviceUser", "DeviceUser")
                        .WithMany("DeviceUserDevices")
                        .HasForeignKey("DeviceUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("DeviceUser");
                });

            modelBuilder.Entity("OneValet.DeviceGallery.Domain.Entities.Device", b =>
                {
                    b.Navigation("DeviceUserDevices");
                });

            modelBuilder.Entity("OneValet.DeviceGallery.Domain.Entities.DeviceType", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("OneValet.DeviceGallery.Domain.Entities.DeviceUser", b =>
                {
                    b.Navigation("DeviceUserDevices");
                });
#pragma warning restore 612, 618
        }
    }
}
